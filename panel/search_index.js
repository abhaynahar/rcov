var search_data = {"index":{"searchIndex":["coverageinfo","rcov","callsiteanalyzer","callsite","defsite","codecoverageanalyzer","differentialanalyzer","filestatistics","formatters","htmlprofiling","htmlerbtemplate","rubyannotation","rcov__","rcovtask","string","[]()","aggregate_data()","analyzed_classes()","analyzed_files()","analyzed_methods()","calling_class()","calling_method()","callsites()","code_coverage()","code_coverage_for_report()","code_coverage_html()","compute_raw_data_difference()","coverage_threshold_classes()","data()","data_default()","data_matching()","default_color()","default_title()","define()","defsite()","depth()","execute()","file()","file_filter_classes()","format_backtrace_array()","get_binding()","hook_level()","install_hook()","install_hook()","is_code?()","line()","line_css()","lines()","merge()","method_missing()","methods_for_class()","new()","new()","new()","new()","new()","new()","new()","new()","new()","num_code_lines()","num_lines()","output_color_table?()","raw_data_absolute()","relative_filename()","remove_hook()","remove_hook()","render()","reset()","reset()","run_hooked()","run_hooked()","span_class()","test_files=()","to_a()","total_coverage()","total_coverage_for_report()","license","readme.markdown","rcov.rb","call_site_analyzer.rb","code_coverage_analyzer.rb","coverage_info.rb","differential_analyzer.rb","file_statistics.rb","formatters.rb","base_formatter.rb","failure_report.rb","full_text_report.rb","html_coverage.rb","html_erb_template.rb","html_profiling.rb","ruby_annotation.rb","text_coverage_diff.rb","text_report.rb","text_summary.rb","lowlevel.rb","rcovtask.rb","detail.html.erb","index.html.erb","jquery-1.3.2.min.js","jquery.tablesorter.min.js","print.css","rcov.js","screen.css","version.rb"],"longSearchIndex":["lib/rcov/coverage_info.rb","lib/rcov.rb","rcov","rcov::callsiteanalyzer","rcov::callsiteanalyzer","rcov","rcov","rcov","rcov","rcov::formatters","rcov::formatters","rcov::formatters","rcov","rcov","lib/rcov.rb","coverageinfo","rcov::differentialanalyzer","rcov::callsiteanalyzer","rcov::codecoverageanalyzer","rcov::callsiteanalyzer","rcov::callsiteanalyzer::callsite","rcov::callsiteanalyzer::callsite","rcov::callsiteanalyzer","rcov::filestatistics","rcov::filestatistics","rcov::formatters::htmlerbtemplate","rcov::differentialanalyzer","rcov::formatters::htmlerbtemplate","rcov::codecoverageanalyzer","rcov::differentialanalyzer","rcov::codecoverageanalyzer","rcov::formatters::htmlprofiling","rcov::formatters::htmlprofiling","rcov::rcovtask","rcov::callsiteanalyzer","rcov::callsiteanalyzer::callsite","rcov::formatters::rubyannotation","rcov::callsiteanalyzer::callsite","rcov::formatters::htmlerbtemplate","rcov::rcov__","rcov::formatters::htmlerbtemplate","rcov::differentialanalyzer","rcov::codecoverageanalyzer","rcov::differentialanalyzer","rcov::filestatistics","rcov::callsiteanalyzer::callsite","rcov::formatters::htmlerbtemplate","string","rcov::filestatistics","rcov::formatters::htmlerbtemplate","rcov::callsiteanalyzer","coverageinfo","rcov::callsiteanalyzer","rcov::codecoverageanalyzer","rcov::differentialanalyzer","rcov::filestatistics","rcov::formatters::htmlprofiling","rcov::formatters::htmlerbtemplate","rcov::formatters::rubyannotation","rcov::rcovtask","rcov::filestatistics","rcov::filestatistics","rcov::formatters::htmlprofiling","rcov::differentialanalyzer","rcov::formatters::htmlerbtemplate","rcov::codecoverageanalyzer","rcov::differentialanalyzer","rcov::formatters::htmlerbtemplate","rcov::codecoverageanalyzer","rcov::differentialanalyzer","rcov::codecoverageanalyzer","rcov::differentialanalyzer","rcov::formatters::htmlprofiling","rcov::rcovtask","coverageinfo","rcov::filestatistics","rcov::filestatistics","files/license.html","files/readme_markdown.html","files/lib/rcov_rb.html","files/lib/rcov/call_site_analyzer_rb.html","files/lib/rcov/code_coverage_analyzer_rb.html","files/lib/rcov/coverage_info_rb.html","files/lib/rcov/differential_analyzer_rb.html","files/lib/rcov/file_statistics_rb.html","files/lib/rcov/formatters_rb.html","files/lib/rcov/formatters/base_formatter_rb.html","files/lib/rcov/formatters/failure_report_rb.html","files/lib/rcov/formatters/full_text_report_rb.html","files/lib/rcov/formatters/html_coverage_rb.html","files/lib/rcov/formatters/html_erb_template_rb.html","files/lib/rcov/formatters/html_profiling_rb.html","files/lib/rcov/formatters/ruby_annotation_rb.html","files/lib/rcov/formatters/text_coverage_diff_rb.html","files/lib/rcov/formatters/text_report_rb.html","files/lib/rcov/formatters/text_summary_rb.html","files/lib/rcov/lowlevel_rb.html","files/lib/rcov/rcovtask_rb.html","files/lib/rcov/templates/detail_html_erb.html","files/lib/rcov/templates/index_html_erb.html","files/lib/rcov/templates/jquery-1_3_2_min_js.html","files/lib/rcov/templates/jquery_tablesorter_min_js.html","files/lib/rcov/templates/print_css.html","files/lib/rcov/templates/rcov_js.html","files/lib/rcov/templates/screen_css.html","files/lib/rcov/version_rb.html"],"info":[["CoverageInfo","lib/rcov/coverage_info.rb","classes/CoverageInfo.html"," < Object","Rcov::CoverageInfo is but a wrapper for an array, with some additional checks. It is returned by FileStatistics#coverage.",1],["Rcov","lib/rcov/call_site_analyzer.rb","classes/Rcov.html"," < ","rcov Copyright (c) 2004-2006 Mauricio Fernandez <mfp@acm.org> See LICENSE for licensing information.",1],["CallSiteAnalyzer","Rcov","classes/Rcov/CallSiteAnalyzer.html"," < DifferentialAnalyzer","A CallSiteAnalyzer can be used to obtain information about: * where a method is defined (\"+defsite+\")",1],["CallSite","Rcov::CallSiteAnalyzer","classes/Rcov/CallSiteAnalyzer/CallSite.html"," < Struct.new(:backtrace)","Object representing a method call site. It corresponds to a part of the callstack starting from the context",1],["DefSite","Rcov::CallSiteAnalyzer","classes/Rcov/CallSiteAnalyzer/DefSite.html"," < Struct.new(:file, :line)","A method definition site. ",1],["CodeCoverageAnalyzer","Rcov","classes/Rcov/CodeCoverageAnalyzer.html"," < DifferentialAnalyzer","A CodeCoverageAnalyzer is responsible for tracing code execution and returning code coverage and execution",1],["DifferentialAnalyzer","Rcov","classes/Rcov/DifferentialAnalyzer.html"," < Object","",1],["FileStatistics","Rcov","classes/Rcov/FileStatistics.html"," < Object","A FileStatistics object associates a filename to: 1. its source code 2. the per-line coverage information",1],["Formatters","Rcov","classes/Rcov/Formatters.html"," < ","",1],["HTMLProfiling","Rcov::Formatters","classes/Rcov/Formatters/HTMLProfiling.html"," < HTMLCoverage","",1],["HtmlErbTemplate","Rcov::Formatters","classes/Rcov/Formatters/HtmlErbTemplate.html"," < Object","",1],["RubyAnnotation","Rcov::Formatters","classes/Rcov/Formatters/RubyAnnotation.html"," < BaseFormatter","",1],["RCOV__","Rcov","classes/Rcov/RCOV__.html"," < ","RCOV__ performs the low-level tracing of the execution, gathering code coverage information in the process.",1],["RcovTask","Rcov","classes/Rcov/RcovTask.html"," < Rake::TaskLib","Create a task that runs a set of tests through rcov, generating code coverage reports. Example: require",1],["String","lib/rcov.rb","classes/String.html"," < Object","",1],["[]","CoverageInfo","classes/CoverageInfo.html#M000041","(line)","Return the coverage status for the requested line. There are four possible return values: * nil if there's",2],["aggregate_data","Rcov::DifferentialAnalyzer","classes/Rcov/DifferentialAnalyzer.html#M000053","(aggregated_data, delta)","",2],["analyzed_classes","Rcov::CallSiteAnalyzer","classes/Rcov/CallSiteAnalyzer.html#M000016","()","Classes whose methods have been called. Returns an array of strings describing the classes (just klass.to_s",2],["analyzed_files","Rcov::CodeCoverageAnalyzer","classes/Rcov/CodeCoverageAnalyzer.html#M000005","()","Return an array with the names of the files whose code was executed inside the block given to #run_hooked",2],["analyzed_methods","Rcov::CallSiteAnalyzer","classes/Rcov/CallSiteAnalyzer.html#M000021","(classname)","Alias for #methods_for_class",2],["calling_class","Rcov::CallSiteAnalyzer::CallSite","classes/Rcov/CallSiteAnalyzer/CallSite.html#M000009","(level = 0)","Name of the class holding the method where the call originated. Might return +nil+ if it could not be",2],["calling_method","Rcov::CallSiteAnalyzer::CallSite","classes/Rcov/CallSiteAnalyzer/CallSite.html#M000008","(level = 0)","Name of the method where the call originated. Returns +nil+ if the call originated in +toplevel+. Might",2],["callsites","Rcov::CallSiteAnalyzer","classes/Rcov/CallSiteAnalyzer.html#M000022","(classname_or_fullname, methodname = nil)","Returns a hash with <tt>CallSite => call count</tt> associations or +nil+ Can be called in two ways:",2],["code_coverage","Rcov::FileStatistics","classes/Rcov/FileStatistics.html#M000059","()","Code coverage rate: fraction of lines of code executed, relative to the total amount of lines of code",2],["code_coverage_for_report","Rcov::FileStatistics","classes/Rcov/FileStatistics.html#M000060","()","",2],["code_coverage_html","Rcov::Formatters::HtmlErbTemplate","classes/Rcov/Formatters/HtmlErbTemplate.html#M000076","(code_coverage_percentage, is_total=false)","",2],["compute_raw_data_difference","Rcov::DifferentialAnalyzer","classes/Rcov/DifferentialAnalyzer.html#M000054","(first, last)","",2],["coverage_threshold_classes","Rcov::Formatters::HtmlErbTemplate","classes/Rcov/Formatters/HtmlErbTemplate.html#M000075","(percentage)","",2],["data","Rcov::CodeCoverageAnalyzer","classes/Rcov/CodeCoverageAnalyzer.html#M000006","(filename)","Return the available data about the requested file, or nil if none of its code was executed or it cannot",2],["data_default","Rcov::DifferentialAnalyzer","classes/Rcov/DifferentialAnalyzer.html#M000050","()","",2],["data_matching","Rcov::CodeCoverageAnalyzer","classes/Rcov/CodeCoverageAnalyzer.html#M000010","(filename_re)","Data for the first file matching the given regexp. See #data. ",2],["default_color","Rcov::Formatters::HTMLProfiling","classes/Rcov/Formatters/HTMLProfiling.html#M000084","()","",2],["default_title","Rcov::Formatters::HTMLProfiling","classes/Rcov/Formatters/HTMLProfiling.html#M000083","()","",2],["define","Rcov::RcovTask","classes/Rcov/RcovTask.html#M000099","()","Create the tasks defined by this task lib. ",2],["defsite","Rcov::CallSiteAnalyzer","classes/Rcov/CallSiteAnalyzer.html#M000026","(classname_or_fullname, methodname = nil)","Returns a DefSite object corresponding to the given method Can be called in two ways: analyzer.defsite(\"Foo#f1\")",2],["depth","Rcov::CallSiteAnalyzer::CallSite","classes/Rcov/CallSiteAnalyzer/CallSite.html#M000003","()","whose information is included in the CallSite object. ",2],["execute","Rcov::Formatters::RubyAnnotation","classes/Rcov/Formatters/RubyAnnotation.html#M000088","()","",2],["file","Rcov::CallSiteAnalyzer::CallSite","classes/Rcov/CallSiteAnalyzer/CallSite.html#M000004","(level = 0)","File where the method call originated. Might return +nil+ or \"\" if it is not meaningful (C extensions,",2],["file_filter_classes","Rcov::Formatters::HtmlErbTemplate","classes/Rcov/Formatters/HtmlErbTemplate.html#M000077","(file_path)","",2],["format_backtrace_array","Rcov::RCOV__","classes/Rcov/RCOV__.html#M000107","(backtrace)","",2],["get_binding","Rcov::Formatters::HtmlErbTemplate","classes/Rcov/Formatters/HtmlErbTemplate.html#M000081","()","",2],["hook_level","Rcov::DifferentialAnalyzer","classes/Rcov/DifferentialAnalyzer.html#M000051","()","",2],["install_hook","Rcov::CodeCoverageAnalyzer","classes/Rcov/CodeCoverageAnalyzer.html#M000012","()","Start monitoring execution to gather code coverage and execution count information. Such data will be",2],["install_hook","Rcov::DifferentialAnalyzer","classes/Rcov/DifferentialAnalyzer.html#M000047","()","Start monitoring execution to gather information. Such data will be collected until #remove_hook is called.",2],["is_code?","Rcov::FileStatistics","classes/Rcov/FileStatistics.html#M000064","(lineno)","Returns true if the given line number corresponds to code, as opposed to a comment (either # or =begin/=end",2],["line","Rcov::CallSiteAnalyzer::CallSite","classes/Rcov/CallSiteAnalyzer/CallSite.html#M000007","(level = 0)","Line where the method call originated. Might return +nil+ or 0 if it is not meaningful (C extensions,",2],["line_css","Rcov::Formatters::HtmlErbTemplate","classes/Rcov/Formatters/HtmlErbTemplate.html#M000079","(line_number)","",2],["lines","String","classes/String.html#M000110","()","",2],["merge","Rcov::FileStatistics","classes/Rcov/FileStatistics.html#M000057","(lines, coverage, counts)","Merge code coverage and execution count information. As for code coverage, a line will be considered",2],["method_missing","Rcov::Formatters::HtmlErbTemplate","classes/Rcov/Formatters/HtmlErbTemplate.html#M000080","(key, *args)","",2],["methods_for_class","Rcov::CallSiteAnalyzer","classes/Rcov/CallSiteAnalyzer.html#M000017","(classname)","Methods that were called for the given class. See #analyzed_classes for the notation used for singleton",2],["new","CoverageInfo","classes/CoverageInfo.html#M000040","(coverage_array)","",2],["new","Rcov::CallSiteAnalyzer","classes/Rcov/CallSiteAnalyzer.html#M000015","()","",2],["new","Rcov::CodeCoverageAnalyzer","classes/Rcov/CodeCoverageAnalyzer.html#M000002","()","",2],["new","Rcov::DifferentialAnalyzer","classes/Rcov/DifferentialAnalyzer.html#M000045","(install_hook_meth, remove_hook_meth, reset_meth)","",2],["new","Rcov::FileStatistics","classes/Rcov/FileStatistics.html#M000056","(name, lines, counts, comments_run_by_default = false)","",2],["new","Rcov::Formatters::HTMLProfiling","classes/Rcov/Formatters/HTMLProfiling.html#M000082","(opts = {})","",2],["new","Rcov::Formatters::HtmlErbTemplate","classes/Rcov/Formatters/HtmlErbTemplate.html#M000073","(template_file, locals={})","",2],["new","Rcov::Formatters::RubyAnnotation","classes/Rcov/Formatters/RubyAnnotation.html#M000087","(opts = {})","",2],["new","Rcov::RcovTask","classes/Rcov/RcovTask.html#M000098","(name=:rcov)","Create a testing task. ",2],["num_code_lines","Rcov::FileStatistics","classes/Rcov/FileStatistics.html#M000062","()","Number of lines of code (loc). ",2],["num_lines","Rcov::FileStatistics","classes/Rcov/FileStatistics.html#M000063","()","Total number of lines. ",2],["output_color_table?","Rcov::Formatters::HTMLProfiling","classes/Rcov/Formatters/HTMLProfiling.html#M000085","()","",2],["raw_data_absolute","Rcov::DifferentialAnalyzer","classes/Rcov/DifferentialAnalyzer.html#M000052","()","",2],["relative_filename","Rcov::Formatters::HtmlErbTemplate","classes/Rcov/Formatters/HtmlErbTemplate.html#M000078","(path)","",2],["remove_hook","Rcov::CodeCoverageAnalyzer","classes/Rcov/CodeCoverageAnalyzer.html#M000018","()","Stop collecting code coverage and execution count information. #remove_hook will also stop collecting",2],["remove_hook","Rcov::DifferentialAnalyzer","classes/Rcov/DifferentialAnalyzer.html#M000048","()","Stop collecting information. #remove_hook will also stop collecting info if it is run inside a #run_hooked",2],["render","Rcov::Formatters::HtmlErbTemplate","classes/Rcov/Formatters/HtmlErbTemplate.html#M000074","()","",2],["reset","Rcov::CodeCoverageAnalyzer","classes/Rcov/CodeCoverageAnalyzer.html#M000019","()","Remove the data collected so far. The coverage and execution count \"history\" will be erased, and further",2],["reset","Rcov::DifferentialAnalyzer","classes/Rcov/DifferentialAnalyzer.html#M000049","()","Remove the data collected so far. Further collection will start from scratch. ",2],["run_hooked","Rcov::CodeCoverageAnalyzer","classes/Rcov/CodeCoverageAnalyzer.html#M000011","()","Execute the code in the given block, monitoring it in order to gather information about which code was",2],["run_hooked","Rcov::DifferentialAnalyzer","classes/Rcov/DifferentialAnalyzer.html#M000046","()","Execute the code in the given block, monitoring it in order to gather information about which code was",2],["span_class","Rcov::Formatters::HTMLProfiling","classes/Rcov/Formatters/HTMLProfiling.html#M000086","(sourceinfo, marked, count)","",2],["test_files=","Rcov::RcovTask","classes/Rcov/RcovTask.html#M000097","(list)","Explicitly define the list of test files to be included in a test.  +list+ is expected to be an array",2],["to_a","CoverageInfo","classes/CoverageInfo.html#M000043","()","Return an Array holding the code coverage information. ",2],["total_coverage","Rcov::FileStatistics","classes/Rcov/FileStatistics.html#M000058","()","Total coverage rate if comments are also considered \"executable\", given as a fraction, i.e. from 0 to",2],["total_coverage_for_report","Rcov::FileStatistics","classes/Rcov/FileStatistics.html#M000061","()","",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","rcov is copyrighted free software by Mauricio Fernandez <mfp@acm.org>. You can redistribute it and/or",3],["README.markdown","files/README_markdown.html","files/README_markdown.html","","# RCov - Code Coverage for Ruby  ## Why? What?  This is our fork of Mauricio Fernandez's RCov (maintained",3],["rcov.rb","files/lib/rcov_rb.html","files/lib/rcov_rb.html","","rcov Copyright (c) 2004-2006 Mauricio Fernandez <mfp@acm.org> See LICENSE for licensing information.",3],["call_site_analyzer.rb","files/lib/rcov/call_site_analyzer_rb.html","files/lib/rcov/call_site_analyzer_rb.html","","",3],["code_coverage_analyzer.rb","files/lib/rcov/code_coverage_analyzer_rb.html","files/lib/rcov/code_coverage_analyzer_rb.html","","",3],["coverage_info.rb","files/lib/rcov/coverage_info_rb.html","files/lib/rcov/coverage_info_rb.html","","Rcov::CoverageInfo is but a wrapper for an array, with some additional checks. It is returned by FileStatistics#coverage.",3],["differential_analyzer.rb","files/lib/rcov/differential_analyzer_rb.html","files/lib/rcov/differential_analyzer_rb.html","","",3],["file_statistics.rb","files/lib/rcov/file_statistics_rb.html","files/lib/rcov/file_statistics_rb.html","","",3],["formatters.rb","files/lib/rcov/formatters_rb.html","files/lib/rcov/formatters_rb.html","","",3],["base_formatter.rb","files/lib/rcov/formatters/base_formatter_rb.html","files/lib/rcov/formatters/base_formatter_rb.html","","",3],["failure_report.rb","files/lib/rcov/formatters/failure_report_rb.html","files/lib/rcov/formatters/failure_report_rb.html","","",3],["full_text_report.rb","files/lib/rcov/formatters/full_text_report_rb.html","files/lib/rcov/formatters/full_text_report_rb.html","","",3],["html_coverage.rb","files/lib/rcov/formatters/html_coverage_rb.html","files/lib/rcov/formatters/html_coverage_rb.html","","",3],["html_erb_template.rb","files/lib/rcov/formatters/html_erb_template_rb.html","files/lib/rcov/formatters/html_erb_template_rb.html","","",3],["html_profiling.rb","files/lib/rcov/formatters/html_profiling_rb.html","files/lib/rcov/formatters/html_profiling_rb.html","","",3],["ruby_annotation.rb","files/lib/rcov/formatters/ruby_annotation_rb.html","files/lib/rcov/formatters/ruby_annotation_rb.html","","",3],["text_coverage_diff.rb","files/lib/rcov/formatters/text_coverage_diff_rb.html","files/lib/rcov/formatters/text_coverage_diff_rb.html","","",3],["text_report.rb","files/lib/rcov/formatters/text_report_rb.html","files/lib/rcov/formatters/text_report_rb.html","","",3],["text_summary.rb","files/lib/rcov/formatters/text_summary_rb.html","files/lib/rcov/formatters/text_summary_rb.html","","",3],["lowlevel.rb","files/lib/rcov/lowlevel_rb.html","files/lib/rcov/lowlevel_rb.html","","rcov Copyright (c) 2004-2006 Mauricio Fernandez <mfp@acm.org> See LEGAL and LICENSE for licensing information.",3],["rcovtask.rb","files/lib/rcov/rcovtask_rb.html","files/lib/rcov/rcovtask_rb.html","","Define a task library for performing code coverage analysis of unit tests using rcov. ",3],["detail.html.erb","files/lib/rcov/templates/detail_html_erb.html","files/lib/rcov/templates/detail_html_erb.html","","<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">",3],["index.html.erb","files/lib/rcov/templates/index_html_erb.html","files/lib/rcov/templates/index_html_erb.html","","<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">",3],["jquery-1.3.2.min.js","files/lib/rcov/templates/jquery-1_3_2_min_js.html","files/lib/rcov/templates/jquery-1_3_2_min_js.html","","/*  * jQuery JavaScript Library v1.3.2  * http://jquery.com/  *  * Copyright (c) 2009 John Resig  * Dual",3],["jquery.tablesorter.min.js","files/lib/rcov/templates/jquery_tablesorter_min_js.html","files/lib/rcov/templates/jquery_tablesorter_min_js.html","","/*  *   * TableSorter 2.0 - Client-side table sorting with ease!  * Version 2.0.3  * @requires jQuery",3],["print.css","files/lib/rcov/templates/print_css.html","files/lib/rcov/templates/print_css.html","","/* Hide controls */    body {     color: #000000;     background-color: #ffffff;   }  /* Hide controls",3],["rcov.js","files/lib/rcov/templates/rcov_js.html","files/lib/rcov/templates/rcov_js.html","","function toggleCode( id ) {   if ( document.getElementById ) {     elem = document.getElementById( id",3],["screen.css","files/lib/rcov/templates/screen_css.html","files/lib/rcov/templates/screen_css.html","","/* @group General */    body {     font-family: Verdana, Helvetica, Arial, Sans-Serif;     font-size:",3],["version.rb","files/lib/rcov/version_rb.html","files/lib/rcov/version_rb.html","","rcov Copyright (c) 2004-2006 Mauricio Fernandez <mfp@acm.org> See LICENSE for licensing information.",3]]}}